<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>docker-windows-wsl2</title>
      <link href="/2020/07/27/docker-windows-wsl2/"/>
      <url>/2020/07/27/docker-windows-wsl2/</url>
      
        <content type="html"><![CDATA[<!-- * @author: Li Fu * @create_time: 2020-07-27 11:15:14 * @description: 以 wsl2 为引擎安装 docker desktop --><h1 id="wsl2-引擎安装-docker-desktop"><a href="#wsl2-引擎安装-docker-desktop" class="headerlink" title="wsl2 引擎安装 docker desktop"></a>wsl2 引擎安装 docker desktop</h1><h2 id="设置-wsl2"><a href="#设置-wsl2" class="headerlink" title="设置 wsl2"></a>设置 wsl2</h2><h3 id="打开-wsl-功能"><a href="#打开-wsl-功能" class="headerlink" title="打开 wsl 功能"></a>打开 wsl 功能</h3><p>进入<code>控制面板 -&gt; 卸载程序 -&gt; 启用或关闭 windows 功能</code>勾选<code>适用于 linux 的 windows 子系统</code></p><p><img src="/img/docker-imgs/DockerWindowsWsl2_1.png" alt="打开 wsl 功能" title="Configure"></p><h3 id="升级到-wsl2-引擎"><a href="#升级到-wsl2-引擎" class="headerlink" title="升级到 wsl2 引擎"></a>升级到 wsl2 引擎</h3><p>wsl 默认使用 wsl1 作为内核，新版 docker desktop 仅支持 wsl2，所以先升级内核</p><ol><li><p>进入 <a href="https://docs.microsoft.com/zh-cn/windows/wsl/wsl2-kernel" target="_blank" rel="noopener">https://docs.microsoft.com/zh-cn/windows/wsl/wsl2-kernel</a> 下载 wsl2 内核，并安装</p></li><li><p>打开命令行工具，运行<code>wsl --set-default-version 2</code>，将 wsl2 作为默认内核</p></li></ol><h3 id="安装-linux-分发版本"><a href="#安装-linux-分发版本" class="headerlink" title="安装 linux 分发版本"></a>安装 linux 分发版本</h3><p>打开 Microsoft Store 搜索偏好的 linux 分发版本，如 ubuntu，并安装</p><p><img src="/img/docker-imgs/DockerWindowsWsl2_2.png" alt="安装 linux" title="Intallation"></p><p>安装完成后，打开命令行工具，运行<code>wsl -l -v</code>，查看 linux 的 wsl 版本</p><p><img src="/img/docker-imgs/DockerWindowsWsl2_3.png" alt="查看版本" title="Check"></p><p>由此，准备工作完成</p><h2 id="安装设置-docker-desktop"><a href="#安装设置-docker-desktop" class="headerlink" title="安装设置 docker desktop"></a>安装设置 docker desktop</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p><img src="/img/docker-imgs/InstallDockerDesktopForWindows.jpg" alt="安装 Docker Desktop for Windows" title="Installation"></p><h3 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h3><ol><li>打开 docker 的<code>Settings -&gt; General</code>，勾选<code>Use the WSL 2 based engine</code>，点击<code>Apply &amp; Restart</code></li></ol><p><img src="/img/docker-imgs/DockerWindowsWsl2_4.png" alt="设置" title="Configure"></p><ol start="2"><li>切换到<code>Settings -&gt; Resources -&gt; WSL Integration</code>，查看是否应用成功</li></ol><p><img src="/img/docker-imgs/DockerWindowsWsl2_5.png" alt="设置" title="Configure"></p><p>由此，docker desktop 已使用 wsl2 作为引擎</p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开发环境 </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker Desktop for MacOS 安装</title>
      <link href="/2019/12/19/docker-macOS-install/"/>
      <url>/2019/12/19/docker-macOS-install/</url>
      
        <content type="html"><![CDATA[<!-- * @author: Li Fu * @create_time: 2019-12-19 10:41:28 * @description: Docker Desktop for MacOS 安装 --><h1 id="Docker-Desktop-for-MacOS-安装"><a href="#Docker-Desktop-for-MacOS-安装" class="headerlink" title="Docker Desktop for MacOS 安装"></a>Docker Desktop for MacOS 安装</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="打开下载好的文件"><a href="#打开下载好的文件" class="headerlink" title="打开下载好的文件"></a>打开下载好的文件</h3><p><img src="/img/docker-imgs/InstallDockerDesktopForMacOS1.png" alt="安装 Docker Desktop for MacOS" title="Installation"></p><h3 id="安装成功后"><a href="#安装成功后" class="headerlink" title="安装成功后"></a>安装成功后</h3><p>若<code>控制台</code>中出现 docker 图标，则表明安装成功。</p><h3 id="打开-Docker-Desktop"><a href="#打开-Docker-Desktop" class="headerlink" title="打开 Docker Desktop"></a>打开 Docker Desktop</h3><p><img src="/img/docker-imgs/InstallDockerDesktopForMacOS2.png" alt="打开 Docker Desktop for MacOS 1" title="Open 1"></p><p>若出现如下提示，点击 <code>OK</code>，输入管理员用户密码即可。</p><p><img src="/img/docker-imgs/InstallDockerDesktopForMacOS3.png" alt="打开 Docker Desktop for MacOS 2" title="Open 2"></p><h2 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h2><p>点击上方菜单栏 Docker Desktop 图标，点击 <code>Preferences</code> 进入设置。</p><p><strong>P.S.</strong> 注意每一步设置完都需要点击 <code>Apply</code>。</p><h3 id="通用设置"><a href="#通用设置" class="headerlink" title="通用设置"></a>通用设置</h3><p><img src="/img/docker-imgs/MacOSDockerSetting1.png" alt="通用设置" title="General"></p><h3 id="共享目录设置"><a href="#共享目录设置" class="headerlink" title="共享目录设置"></a>共享目录设置</h3><p><img src="/img/docker-imgs/MacOSDockerSetting2.png" alt="共享目录设置" title="File Sharing"></p><h3 id="磁盘大小设置"><a href="#磁盘大小设置" class="headerlink" title="磁盘大小设置"></a>磁盘大小设置</h3><p><img src="/img/docker-imgs/MacOSDockerSetting3.png" alt="磁盘大小设置" title="Disk"></p><h3 id="Docker-Engine-配置"><a href="#Docker-Engine-配置" class="headerlink" title="Docker Engine 配置"></a>Docker Engine 配置</h3><p><img src="/img/docker-imgs/MacOSDockerSetting4.png" alt="Docker Engine 配置" title="Advanced"></p><h3 id="Docker-Hub-镜像源设置"><a href="#Docker-Hub-镜像源设置" class="headerlink" title="Docker Hub 镜像源设置"></a>Docker Hub 镜像源设置</h3><p>我使用的是 DaoCloud(<a href="http://f1361db2.m.daocloud.io" target="_blank" rel="noopener">http://f1361db2.m.daocloud.io</a>) 和 USTC(<a href="https://docker.mirrors.ustc.edu.cn" target="_blank" rel="noopener">https://docker.mirrors.ustc.edu.cn</a>) 的镜像源。</p><p><img src="/img/docker-imgs/MacOSDockerSetting5.png" alt="Docker Hub 镜像源设置" title="Daemon"></p><p><strong>P.S.</strong> 最好去 DaoCloud(<a href="https://www.daocloud.io/mirror" target="_blank" rel="noopener">https://www.daocloud.io/mirror</a>) 和 USTC(<a href="http://mirrors.ustc.edu.cn/" target="_blank" rel="noopener">http://mirrors.ustc.edu.cn/</a>) 官网确认镜像源地址是否改动。</p><h3 id="验证安装完成"><a href="#验证安装完成" class="headerlink" title="验证安装完成"></a>验证安装完成</h3><ul><li><p>打开命令行，输入<code>docker --verion</code>，出现类似信息即表明安装成功</p><p><img src="/img/docker-imgs/InstallDockerDesktopForMacOS4.png" alt="安装完成" title="Install Complete"></p></li></ul><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><!-- TODO: add article link --><h2 id="使用自带的图形化界面-–-Kitematic"><a href="#使用自带的图形化界面-–-Kitematic" class="headerlink" title="使用自带的图形化界面 – Kitematic"></a>使用自带的图形化界面 – Kitematic</h2><p>Docker 启动完成状态下，点击菜单栏 <code>Docker Desktop</code> 图标，点击 <code>Kitematic</code>。</p><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><p>若弹出提示框，根据提示安装 Kitematic。</p><p><img src="/img/docker-imgs/Kitematic-Mac.png" alt="安装 Kitematic" title="Install Kitematic"></p><h3 id="设置-1"><a href="#设置-1" class="headerlink" title="设置"></a>设置</h3><ul><li><p>打开 Kitematic 后，进入设置界面</p><p><img src="/img/docker-imgs/Kitematic2.jpg" alt="进入设置" title="Kitematic Settings 1"></p></li><li><p>根据所需进行设置</p><p><img src="/img/docker-imgs/Kitematic3.jpg" alt="设置所需配置" title="Kitematic Settings 2"></p></li></ul><h3 id="使用-1"><a href="#使用-1" class="headerlink" title="使用"></a>使用</h3><p><img src="/img/docker-imgs/Kitematic4.jpg" alt="使用 Kitematic" title="Use Kitematic"></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开发环境 </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker Toolbox for Windows 安装</title>
      <link href="/2019/11/22/docker-windows-install-toolbox/"/>
      <url>/2019/11/22/docker-windows-install-toolbox/</url>
      
        <content type="html"><![CDATA[<!-- * @author: LiFu * @date: 2019-12-16 12:10:08 * @description: Docker Toolbox for Windows 安装 --><h1 id="Docker-Toolbox-for-Windows-安装"><a href="#Docker-Toolbox-for-Windows-安装" class="headerlink" title="Docker Toolbox for Windows 安装"></a>Docker Toolbox for Windows 安装</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="打开下载好的文件"><a href="#打开下载好的文件" class="headerlink" title="打开下载好的文件"></a>打开下载好的文件</h3><p><img src="/img/docker-imgs/InstallDockerToolboxForWindows1.png" alt="安装 Docker Toolbox for Windows 1" title="Installation 1"></p><p><img src="/img/docker-imgs/InstallDockerToolboxForWindows2.png" alt="安装 Docker Toolbox for Windows 2" title="Installation 2"></p><p><img src="/img/docker-imgs/InstallDockerToolboxForWindows3.png" alt="安装 Docker Toolbox for Windows 3" title="Installation 3"></p><p><img src="/img/docker-imgs/InstallDockerToolboxForWindows4.png" alt="安装 Docker Toolbox for Windows 4" title="Installation 4"></p><p><img src="/img/docker-imgs/InstallDockerToolboxForWindows5.png" alt="安装 Docker Toolbox for Windows 5" title="Installation 5"></p><h3 id="安装成功后"><a href="#安装成功后" class="headerlink" title="安装成功后"></a>安装成功后</h3><p>若出现以下三个软件，则表明安装成功。</p><p><img src="/img/docker-imgs/WindowsDockerToolboxInstall1.png" alt="安装成功" title="Install Successfully"></p><h2 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h2><p>docker toolbox 相较于 docker desktop 设置较为繁琐，需要在环境变量和软件中分别设置。</p><h3 id="通用设置"><a href="#通用设置" class="headerlink" title="通用设置"></a>通用设置</h3><h4 id="虚拟机配置设置"><a href="#虚拟机配置设置" class="headerlink" title="虚拟机配置设置"></a>虚拟机配置设置</h4><p>右键计算机，依次打开<code>属性</code> -&gt; <code>高级系统设置</code> -&gt; <code>高级</code> -&gt; <code>环境变量</code>。</p><ul><li><p>虚拟机 CPU 核数 <code>VIRTUALBOX_CPU_COUNT</code></p><p><img src="/img/docker-imgs/WindowsDockerToolboxInstall2.png" alt="CPU 核数" title="CPU Count"></p></li><li><p>虚拟机磁盘大小，单位 MB <code>VIRTUALBOX_DISK_SIZE</code></p><p><img src="/img/docker-imgs/WindowsDockerToolboxInstall3.png" alt="磁盘大小" title="Disk Size"></p></li><li><p>虚拟机内存大小，单位 MB <code>VIRTUALBOX_MEMORY_SIZE</code></p><p><img src="/img/docker-imgs/WindowsDockerToolboxInstall4.png" alt="内存大小" title="Memory Size"></p></li></ul><h4 id="磁盘位置设置"><a href="#磁盘位置设置" class="headerlink" title="磁盘位置设置"></a>磁盘位置设置</h4><p>双击 Docker Quickstart Terminal。</p><ul><li><p>若出现如下报错，说明 CPU 未开启虚拟化，需在 BIOS 中开启。</p><p><img src="/img/docker-imgs/WindowsDockerToolboxInstall5.png" alt="CPU 未开启虚拟化" title="VT-X/AMD-v"></p></li><li><p>等待直到出现如下图案，则表明启动成功</p><p><img src="/img/docker-imgs/WindowsDockerToolboxInstall6.png" alt="启动成功" title="Started"></p></li><li><p>输入 <code>docker-machine stop default</code> 关闭 docker，打开 Oracle VM VirtualBox，依次打开<code>管理``````虚拟介质管理器</code></p><p><img src="/img/docker-imgs/WindowsDockerToolboxInstall7.png" alt="移动磁盘位置 1" title="Move Disk 1"></p><p><img src="/img/docker-imgs/WindowsDockerToolboxInstall8.png" alt="移动磁盘位置 2" title="Move Disk 2"></p></li></ul><h3 id="共享目录设置"><a href="#共享目录设置" class="headerlink" title="共享目录设置"></a>共享目录设置</h3><p>命令行输入 <code>docker-machine stop default</code> 关闭 docker，打开 Oracle VM VirtualBox，依次打开 <code>default 的设置</code> -&gt; <code>共享文件夹</code>。</p><p><img src="/img/docker-imgs/WindowsDockerToolboxInstall9.png" alt="设置共享目录" title="Share Disk"></p><h3 id="Docker-Hub-镜像源设置"><a href="#Docker-Hub-镜像源设置" class="headerlink" title="Docker Hub 镜像源设置"></a>Docker Hub 镜像源设置</h3><p>输入 <code>docker-machine stop default</code> 关闭 docker，打开 <code>C:\Users\用户名\.docker\machine\machines\default</code>，编辑 config.json，修改 <code>RegistryMirror</code> 字段。</p><p>我使用的是 DaoCloud(<a href="http://f1361db2.m.daocloud.io" target="_blank" rel="noopener">http://f1361db2.m.daocloud.io</a>) 和 USTC(<a href="https://docker.mirrors.ustc.edu.cn" target="_blank" rel="noopener">https://docker.mirrors.ustc.edu.cn</a>) 的镜像源。</p><p><img src="/img/docker-imgs/WindowsDockerToolboxInstall10.png" alt="设置镜像源" title="Set Mirrors"></p><p><strong>P.S.</strong> 最好去 DaoCloud(<a href="https://www.daocloud.io/mirror" target="_blank" rel="noopener">https://www.daocloud.io/mirror</a>) 和 USTC(<a href="http://mirrors.ustc.edu.cn/" target="_blank" rel="noopener">http://mirrors.ustc.edu.cn/</a>) 官网确认镜像源地址是否改动。</p><h3 id="验证安装完成"><a href="#验证安装完成" class="headerlink" title="验证安装完成"></a>验证安装完成</h3><ul><li><p>所有设置完成后，双击 Docker Quickstart Terminal，等待启动完成。</p></li><li><p>打开命令行，输入<code>docker --verion</code>，出现如下类似信息即表明安装成功</p><p><img src="/img/docker-imgs/WindowsDockerInstall2.jpg" alt="安装成功2" title="Install Successfully"></p></li></ul><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><!-- TODO: add article link --><h2 id="使用自带的图形化界面-–-Kitematic"><a href="#使用自带的图形化界面-–-Kitematic" class="headerlink" title="使用自带的图形化界面 – Kitematic"></a>使用自带的图形化界面 – Kitematic</h2><p>Docker 启动完成状态下，双击 Kitematic (Alpha)。</p><h3 id="使用-virtualbox-启动"><a href="#使用-virtualbox-启动" class="headerlink" title="使用 virtualbox 启动"></a>使用 virtualbox 启动</h3><p>若界面出现警告，则点击 <code>USE VIRTUALBOX</code>。</p><p><img src="/img/docker-imgs/DockerToolbox-Kitematic1.png" alt="启动 Kitematic" title="Start Kitematic"></p><h3 id="设置-1"><a href="#设置-1" class="headerlink" title="设置"></a>设置</h3><ul><li><p>打开 Kitematic 后，进入设置界面，如下图</p><p><img src="/img/docker-imgs/Kitematic2.jpg" alt="进入设置" title="Kitematic Settings 1"></p></li><li><p>根据所需进行设置，如下图</p><p><img src="/img/docker-imgs/DockerToolbox-Kitematic2.jpg" alt="设置所需配置" title="Kitematic Settings 2"></p></li></ul><h3 id="使用-1"><a href="#使用-1" class="headerlink" title="使用"></a>使用</h3><p><img src="/img/docker-imgs/Kitematic4.jpg" alt="使用 Kitematic" title="Use Kitematic"></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开发环境 </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker Desktop for Windows 安装</title>
      <link href="/2019/11/20/docker-windows-install/"/>
      <url>/2019/11/20/docker-windows-install/</url>
      
        <content type="html"><![CDATA[<!-- * @author: LiFu * @date: 2019-12-16 12:10:08 * @description: Docker Desktop for Windows 安装 --><h1 id="Docker-Desktop-for-Windows-安装"><a href="#Docker-Desktop-for-Windows-安装" class="headerlink" title="Docker Desktop for Windows 安装"></a>Docker Desktop for Windows 安装</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="打开下载好的文件"><a href="#打开下载好的文件" class="headerlink" title="打开下载好的文件"></a>打开下载好的文件</h3><p><img src="/img/docker-imgs/InstallDockerDesktopForWindows.jpg" alt="安装 Docker Desktop for Windows" title="Installation"></p><h3 id="安装成功后"><a href="#安装成功后" class="headerlink" title="安装成功后"></a>安装成功后</h3><p><img src="/img/docker-imgs/WindowsDockerInstall1.jpg" alt="安装成功" title="Install Successfully"></p><h3 id="打开-Docker-Desktop-后可能有如下提示，点击-Ok，重启后即可使用"><a href="#打开-Docker-Desktop-后可能有如下提示，点击-Ok，重启后即可使用" class="headerlink" title="打开 Docker Desktop 后可能有如下提示，点击 Ok，重启后即可使用"></a>打开 Docker Desktop 后可能有如下提示，点击 Ok，重启后即可使用</h3><p><img src="/img/docker-imgs/OpenHyper-V.jpg" alt="打开 Hyper-V" title="Open Hyper-V"></p><h2 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h2><p>右键右下角的 <code>Docker Desktop</code> 图标，点击 <code>Settings</code> 进入设置。</p><p><strong>P.S.</strong> 注意每一步设置完都需要点击 <code>Apply</code>。</p><h3 id="通用设置"><a href="#通用设置" class="headerlink" title="通用设置"></a>通用设置</h3><p><img src="/img/docker-imgs/WindowsDockerSetting1.jpg" alt="通用设置" title="General"></p><h3 id="共享目录设置"><a href="#共享目录设置" class="headerlink" title="共享目录设置"></a>共享目录设置</h3><p><img src="/img/docker-imgs/WindowsDockerSetting2.jpg" alt="共享目录设置" title="Shared Drives"></p><h3 id="Docker-Engine-配置"><a href="#Docker-Engine-配置" class="headerlink" title="Docker Engine 配置"></a>Docker Engine 配置</h3><p><img src="/img/docker-imgs/WindowsDockerSetting3.jpg" alt="Docker Engine 配置" title="Advanced"></p><h3 id="Docker-Hub-镜像源设置"><a href="#Docker-Hub-镜像源设置" class="headerlink" title="Docker Hub 镜像源设置"></a>Docker Hub 镜像源设置</h3><p>我使用的是 DaoCloud(<a href="http://f1361db2.m.daocloud.io" target="_blank" rel="noopener">http://f1361db2.m.daocloud.io</a>) 和 USTC(<a href="https://docker.mirrors.ustc.edu.cn" target="_blank" rel="noopener">https://docker.mirrors.ustc.edu.cn</a>) 的镜像源。</p><p><img src="/img/docker-imgs/WindowsDockerSetting4.jpg" alt="Docker Hub 镜像源设置" title="Daemon"></p><p><strong>P.S.</strong> 最好去 DaoCloud(<a href="https://www.daocloud.io/mirror" target="_blank" rel="noopener">https://www.daocloud.io/mirror</a>) 和 USTC(<a href="http://mirrors.ustc.edu.cn/" target="_blank" rel="noopener">http://mirrors.ustc.edu.cn/</a>) 官网确认镜像源地址是否改动。</p><h3 id="验证安装完成"><a href="#验证安装完成" class="headerlink" title="验证安装完成"></a>验证安装完成</h3><ul><li><p>打开命令行，输入<code>docker --verion</code>，出现类似信息即表明安装成功</p><p><img src="/img/docker-imgs/WindowsDockerInstall2.jpg" alt="安装完成" title="Install Complete"></p></li></ul><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><!-- TODO: add article link --><h2 id="使用自带的图形化界面-–-Kitematic"><a href="#使用自带的图形化界面-–-Kitematic" class="headerlink" title="使用自带的图形化界面 – Kitematic"></a>使用自带的图形化界面 – Kitematic</h2><p>Docker 启动完成状态下，右键右下角的 <code>Docker Desktop</code> 图标，点击 <code>Kitematic</code>。</p><h3 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h3><p>若弹出提示框，根据提示安装 Kitematic。</p><p><img src="/img/docker-imgs/Kitematic-Win.jpg" alt="安装 Kitematic" title="Install Kitematic"></p><h3 id="设置-1"><a href="#设置-1" class="headerlink" title="设置"></a>设置</h3><ul><li><p>打开 Kitematic 后，进入设置界面</p><p><img src="/img/docker-imgs/Kitematic2.jpg" alt="进入设置" title="Kitematic Settings 1"></p></li><li><p>根据所需进行设置</p><p><img src="/img/docker-imgs/Kitematic3.jpg" alt="设置所需配置" title="Kitematic Settings 2"></p></li></ul><h3 id="使用-1"><a href="#使用-1" class="headerlink" title="使用"></a>使用</h3><p><img src="/img/docker-imgs/Kitematic4.jpg" alt="使用 Kitematic" title="Use Kitematic"></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开发环境 </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker 安装</title>
      <link href="/2019/11/12/docker-install/"/>
      <url>/2019/11/12/docker-install/</url>
      
        <content type="html"><![CDATA[<!-- * @author: Li Fu * @create_time: 2019-12-16 12:10:08 * @description: docker 安装，包括 windows 和 macOS --><p>在项目开发的过程中，本人偶尔会听到同事们说 docker。因此，我一直很好奇它是什么，有什么用。刚好我最近得空，仔细了解了一下 docker，发现 docker 如果使用得当将成为开发者的神器。</p><blockquote><p>以这篇文章总结一下我在安装 docker 的过程中遇到过的问题</p></blockquote><h1 id="docker-介绍"><a href="#docker-介绍" class="headerlink" title="docker 介绍"></a>docker 介绍</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>docker 是一个应用容器引擎，开发者可以打包自己的应用到容器里面，然后迁移到其他机器的 docker 应用中，可以实现快速部署。如果出现的故障，可以通过镜像，快速恢复服务。</p><h2 id="使用-docker-的好处"><a href="#使用-docker-的好处" class="headerlink" title="使用 docker 的好处"></a>使用 docker 的好处</h2><p>在开发生涯中，换机器一直是一个令人头疼的问题。因为这意味着开发者需要一定的时间重新搭建开发环境。</p><p>然而，每一次的搭建过程都是大同小异，明显是无意义重复劳动！<code>那是否有什么东西可以把开发者的开发环境完整的迁移到另一台机器呢？</code></p><p>答案是肯定的，那就是 <code>docker</code>。</p><p>只要拥有了 docker，开发者可以用它制作属于自己开发环境镜像。拿着镜像，开发者可以在任意一台安装有 docker 的机器上以极短的时间搭建出一模一样的环境。</p><h1 id="docker-安装"><a href="#docker-安装" class="headerlink" title="docker 安装"></a>docker 安装</h1><h2 id="安装包的选择及下载（-windows-和-macOS-）"><a href="#安装包的选择及下载（-windows-和-macOS-）" class="headerlink" title="安装包的选择及下载（ windows 和 macOS ）"></a>安装包的选择及下载（ windows 和 macOS ）</h2><p>翻看 docker <a href="https://docs.docker.com/" target="_blank" rel="noopener">官方文档</a>，可以发现 docker 有两种安装方式，一种是安装 <a href="https://docs.docker.com/docker-for-windows/install/" target="_blank" rel="noopener">Docker Desktop</a>，一种是安装 <a href="https://docs.docker.com/toolbox/toolbox_install_windows/" target="_blank" rel="noopener">Docker Toolbox</a>，那么如何选择？</p><p>以下对不同系统进行说明</p><h3 id="windows-安装"><a href="#windows-安装" class="headerlink" title="windows 安装"></a>windows 安装</h3><blockquote><p>如果操作系统是 windows10（非家庭版）和 windows8.1，请直接下载 <a href="https://download.docker.com/win/stable/Docker%20for%20Windows%20Installer.exe" target="_blank" rel="noopener">Docker Desktop for Windows</a></p></blockquote><p>  <strong><em>P.S.</em></strong> 具体安装步骤请查看 <a href="/2019/11/20/docker-windows-install/">Docker Desktop for Windows 安装</a></p><blockquote><p>如果操作系统是 windows10（家庭版）、windows7 和 windows8，请在 docker-toolbox 的 <a href="https://github.com/docker/toolbox/releases" target="_blank" rel="noopener">github</a> 页面下载最新的 Docker Toolbox for Windows</p></blockquote><p>  <img src="/img/docker-imgs/DockerToolboxWindows.jpg" alt="下载 Docker Toolbox for Windows" title="Docker Toolbox for Windows"></p><p>  <strong><em>P.S.</em></strong> 具体安装步骤请查看 <a href="/2019/11/22/docker-windows-install-toolbox/">Docker Toolbox for Windows 安装</a></p><h3 id="macOS-安装"><a href="#macOS-安装" class="headerlink" title="macOS 安装"></a>macOS 安装</h3><blockquote><p>如果操作系统版本在 10.13 及以上，请直接下载 <a href="https://download.docker.com/mac/stable/Docker.dmg" target="_blank" rel="noopener">Docker Desktop for MacOS</a></p></blockquote><p>  <strong><em>P.S.</em></strong> 具体安装步骤请查看 <a href="/2019/12/19/docker-macOS-install/">Docker Desktop for MacOS 安装</a></p><blockquote><p>如果是其他操作系统版本，请在 docker-toolbox 的 <a href="https://github.com/docker/toolbox/releases" target="_blank" rel="noopener">github</a> 页面下载最新的 Docker Toolbox for MacOS</p></blockquote><p>  <img src="/img/docker-imgs/DockerToolboxMacOS.jpg" alt="下载 Docker Toolbox for MacOS" title="Docker Toolbox for MacOS"></p><p>  安装步骤与 <code>Docker Toolbox for Windows</code> 基本相似，可参照 <a href="/2019/11/22/docker-windows-install-toolbox/">Docker Toolbox for Windows 安装</a></p><p><strong>P.S.</strong> 本人手里只有 windows 和 macOS，故 Linux 版本文档请参考官方文档。</p><h1 id="出现的问题及解决方案"><a href="#出现的问题及解决方案" class="headerlink" title="出现的问题及解决方案"></a>出现的问题及解决方案</h1><h2 id="windows-系统-Docker-Desktop-与其他虚拟机共存"><a href="#windows-系统-Docker-Desktop-与其他虚拟机共存" class="headerlink" title="windows 系统 Docker Desktop 与其他虚拟机共存"></a>windows 系统 Docker Desktop 与其他虚拟机共存</h2><p>如果在 windows 中安装有其他虚拟机，如 vmware workstation，在安装 docker desktop 之后会导致虚拟机无法使用。</p><p><strong>问题原因：</strong> 这个主要原因是 docker desktop 开启了 <code>hyper-v</code>，其会占用 cpu 虚拟化接口，导致其他虚拟机无法完成虚拟化。</p><p><strong>解决方案：</strong></p><ol><li><p>依次打开<code>控制面板</code> - <code>卸载程序</code> - <code>启用或关闭 Windows 功能</code>。如下图所示，关闭 <code>hyper-v</code>；</p><p><img src="/img/docker-imgs/CloseHyperV.jpg" alt="关闭 Hyper-V" title="Close Hyper-V"></p></li><li><p>卸载 docker desktop；</p></li><li><p>在 docker-toolbox 的 <a href="https://github.com/docker/toolbox/releases" target="_blank" rel="noopener">github</a> 页面下载最新的 Docker Toolbox for Windows 进行安装。</p></li></ol><p><strong>P.S.</strong> 卸载后可能出现虚拟机仍然不能使用，依次进入<code>控制面板</code> - <code>卸载程序</code>修复即可。</p><h2 id="MacOS-系统-Docker-Desktop-可与其他虚拟机共存，请放心使用"><a href="#MacOS-系统-Docker-Desktop-可与其他虚拟机共存，请放心使用" class="headerlink" title="MacOS 系统 Docker Desktop 可与其他虚拟机共存，请放心使用"></a>MacOS 系统 Docker Desktop 可与其他虚拟机共存，请放心使用</h2>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开发环境 </tag>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
